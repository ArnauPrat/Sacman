CMAKE_MINIMUM_REQUIRED( VERSION 2.8.3 )
PROJECT( dali )

IF( UNIX )
	SET(CMAKE_CXX_FLAGS_DEBUG "-O0 --std=c++11 -g -pg -Wall")	
	SET(CMAKE_CXX_FLAGS_RELEASE "-O3 --std=c++11 -DNDEBUG -Wall")
	SET(PLATFORM "unix" )
ENDIF( UNIX )

IF( WIN32 )
	SET(CMAKE_CXX_FLAGS_DEBUG "/Od /openmp /W3")	
	SET(CMAKE_CXX_FLAGS_RELEASE "/O2 /openmp /Oi /Ot /Og /W3")	
	IF( ${CMAKE_SIZEOF_VOID_P} EQUAL 4)
		MESSAGE( FATAL_ERROR "Win32 is Unsupported" )
	ENDIF( ${CMAKE_SIZEOF_VOID_P} EQUAL 4)
	SET( PLATFORM "win64" )
ENDIF( WIN32 )

IF( NOT PLATFORM )
	MESSAGE(FATAL_ERROR "Unable to detect platform")
ENDIF( NOT PLATFORM )

INCLUDE_DIRECTORIES( ./ )
INCLUDE_DIRECTORIES( ../ )
INCLUDE_DIRECTORIES( ${LIB_DIR}/jsoncpp/include )
INCLUDE_DIRECTORIES( ${LIB_DIR}/glew/include )
INCLUDE_DIRECTORIES( ${LIB_DIR}/freeimage/include )

SET( SOURCE_FILES 
    ${LIB_DIR}/jsoncpp/jsoncpp.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Effect.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Globals.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/GLSL.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/PathFinder.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/PixelShader.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Renderer.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/RendererConfig.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Sprite.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/SpriteRenderer.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/Texture.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/VertexShader.cpp
	)

INCLUDE(FindPkgConfig)
FIND_PACKAGE(OpenGL REQUIRED)
LINK_DIRECTORIES( ${LIB_DIR}/freeimage/${PLATFORM} )
LINK_DIRECTORIES( ${LIB_DIR}/glew/${PLATFORM} )

ADD_LIBRARY( ${PROJECT_NAME} ${SOURCE_FILES} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} ${OPENGL_LIBRARIES} glew freeimage  )

SET( DALI_INCLUDE_DIRS 
    ${CMAKE_CURRENT_SOURCE_DIR} 
    ${LIB_DIR}/freeimage/include
    ${LIB_DIR}/glew/include
    PARENT_SCOPE
)

